#!/bin/bash
#
# https://github.com/Aniverse/inexistence
# Author: Aniverse
#
script_update=2020.04.05
script_version=r12040

################################################################################################ Debug

usage_for_debug() {
    export local_packages=/etc/inexistence/00.Installation
    export s=$local_packages/package/qbittorrent/configure
    rm -f $s ; nano $s
    bash /etc/inexistence/00.Installation/package/qbittorrent/configure -u $iUser -p $iPass -w 2017 -i 9002
    bash <(wget -qO- https://github.com/Aniverse/inexistence/raw/master/00.Installation/package/qbittorrent/configure)
}

################################################################################################ Get options

unset LogRootPath LogTimes DebLocation SCLocation LOCKLocation OutputLOG \
      iUser iPass iHome wPort iPort lang

AppName=qBittorrent
AppNameLower=qbittorrent
Need_SourceCode=no  # we no longer need to build qb_password_gen
pm_action=configure

function show_usage() { echo "
$AppName $pm_action $script_version ($script_update)
Usage:
      -u        Username for qBittorrent
      -p        Password for qBittorrent WebUI
      -h        Specifiy user's home path
      -w        WebUI port for qBittorrent
      -i        Incoming port for qBittorrent
      -l        language for qBittorrent WebUI
      -d        Enable debug mode
      --shared  run this script without root privilege, this is for shared seedbox
      --log     Show logfile's content"
exit 1 ; }

OPTS=$(getopt -a -o u:p:w:i:h:l:dh --long "username:,password:,home:,wport:,iport:,lang:,logbase:,debug,shared,log,help" -- "$@")
[ ! $? = 0 ] && show_usage
eval set -- "$OPTS"
while true; do
  case "$1" in
    -u | --username ) iUser="$2"    ; shift 2 ;;
    -p | --password ) iPass="$2"    ; shift 2 ;;
    -h | --home     ) iHome="$2"    ; shift 2 ;;
    -w | --wport    ) wPort="$2"    ; shift 2 ;;
    -i | --iport    ) iPort="$2"    ; shift 2 ;;
    -l | --lang     ) lang="$2"     ; shift 2 ;;
    -d | --debug    ) debug=1       ; shift   ;;
    -h | --help     ) show_usage    ; exit 0   ;  shift   ;;
         --log      ) show_log=1    ; shift   ;;
         --logbase  ) LogTimes="$2" ; shift 2 ;;
         --shared   ) shared=1      ; shift   ;;
    -- ) shift 2 ; break ;;
     * ) break ;;
  esac
done

################################################################################################ Set Variables 1

if [[ -f /etc/inexistence/00.Installation/function ]]; then
    source /etc/inexistence/00.Installation/function
else
    source <(wget --no-check-certificate -qO- https://github.com/Aniverse/inexistence/raw/master/00.Installation/function)
fi

set_variables_log_location
check_var_OutputLOG
debug_log_location
cat_outputlog
add_local_script_to_PATH

################################################################################################ Set Variables 2

[[ -z $iUser || -z $iPass ]] && { echo -e "ERROR: Please specify username and password" ; exit 1 ; }
id -u $iUser >/dev/null 2>&1 || { echo -e "ERROR: User $iUser doesn't exist" ; exit 1 ; }
[[ -z $iHome ]] && [[ $iUser == root ]] && iHome=/root
[[ -z $iHome ]] && [[ $iUser != root ]] && iHome=/home/$iUser
[[ -z $wPort ]] && wPort=2017
[[ -z $iPort ]] && iPort=9002
[[ $lang == eng ]] && qbt_language=en
[[ -z $qbt_language ]] && qbt_language=zh

PortCheck $wPort $iPort
[[ $port_used == 1 ]] && echo_error "Please change your port" && exit 1

qb_installed_ver=$(qbittorrent-nox --version 2>&1 | awk '{print $2}' | grep -oE "[0-9.]+")
qbconf="$iHome/.config/qBittorrent/qBittorrent.conf"

################################################################################################



function dl_qbittorrent_alt_webui() {
    cd $iHome/.config/qBittorrent
    mkdir -p WebUI

    # https://github.com/miniers/qb-web
    curl -sL https://api.github.com/repos/miniers/qb-web/releases/latest | sed "s|,|\n|g" | grep browser_download_url  | grep -oP "https.*zip" | xargs wget -O miniers.qb-web.zip >> $OutputLOG 2>&1
    unzip -o miniers.qb-web.zip -d WebUI/miniers.qb-web >> $OutputLOG 2>&1
    chown $iUser: WebUI/miniers.qb-web                  >> $OutputLOG 2>&1
    rm -rf miniers.qb-web.zip                           >> $OutputLOG 2>&1

    # https://github.com/CzBiX/qb-web
    tmp=$(curl -Ls https://github.com/CzBiX/qb-web/releases | grep -oE "CzBiX/qb-web/releases/download.*zip" | head -1)
    wget -nv "https://github.com/$tmp"                  >> $OutputLOG 2>&1
    unzip -o $(basename $tmp)                           >> $OutputLOG 2>&1
    mv -f dist WebUI/CzBiX.qb-web                       >> $OutputLOG 2>&1
    chown $iUser: WebUI/CzBiX.qb-web                    >> $OutputLOG 2>&1
    rm -f $(basename $tmp)                              >> $OutputLOG 2>&1

    cd
}



function configure_qbittorrent() {

    echo >> $OutputLOG
    cat << EOF > /etc/systemd/system/qbittorrent@.service
[Unit]
Description=qBittorrent Daemon Service
After=network.target

[Service]
#UMask=000
Type=forking
User=%I
LimitNOFILE=infinity
ExecStart=/usr/bin/qbittorrent-nox -d
ExecStop=/usr/bin/killall -s 9 /usr/bin/qbittorrent-nox
Restart=on-failure
#TimeoutSec=300

[Install]
WantedBy=multi-user.target
EOF
    systemctl $systemctl_user_flag daemon-reload >> $OutputLOG 2>&1

    if [[ -d $iHome/.config/qBittorrent ]]; then
        mv $iHome/.config/qBittorrent $iHome/.config/qBittorrent.old.backup.$(date "+%Y.%m.%d.%H.%M.%S")
        rm -rf $iHome/.config/qBittorrent
    fi

    mkdir -p  $iHome/qbittorrent/{download,torrent,watch}   $iHome/.config/qBittorrent   $local_script   $PortLocation
    if [[ -f $local_packages/package/qbittorrent/qqbb ]]; then
        ln -s  $local_packages/package/qbittorrent/qqbb      $local_script/qqbb       >> $OutputLOG 2>&1
    else
        wget -nv https://github.com/Aniverse/inexistence/raw/master/00.Installation/package/qbittorrent/qqbb -O $local_script/qqbb >> $OutputLOG 2>&1
        chmod +x $local_script/qqbb
    fi
    [[ $(command -v unzip) ]] && dl_qbittorrent_alt_webui

    # This is for users who still using qBittorrent older than 4.2.0
    # Therefore some qBittorrent-4.2-and-above-only settings are not added here
    cat << EOF > $qbconf
[Application]
FileLogger\Enabled=true
FileLogger\Age=6
FileLogger\DeleteOld=true
FileLogger\Backup=true
FileLogger\AgeType=1
FileLogger\Path=$iHome/.config/qBittorrent
FileLogger\MaxSize=20

[BitTorrent]
Session\AnnounceToAllTiers=true
Session\AsyncIOThreadsCount=4
Session\CheckingMemUsageSize=16
Session\ChokingAlgorithm=FixedSlots
Session\CoalesceReadWrite=false
Session\FilePoolSize=40
Session\GuidedReadCache=true
Session\MultiConnectionsPerIp=false
Session\SeedChokingAlgorithm=FastestUpload
Session\SendBufferLowWatermark=10
Session\SendBufferWatermark=500
Session\SendBufferWatermarkFactor=50
Session\SocketBacklogSize=30
Session\SuggestMode=false
Session\uTPMixedMode=TCP

[LegalNotice]
Accepted=true

[Preferences]
Advanced\AnnounceToAllTrackers=false
Advanced\RecheckOnCompletion=false
Advanced\osCache=true
Advanced\trackerPort=9000
Bittorrent\AddTrackers=false
Bittorrent\DHT=false
Bittorrent\Encryption=1
Bittorrent\LSD=false
Bittorrent\MaxConnecs=-1
Bittorrent\MaxConnecsPerTorrent=-1
Bittorrent\MaxRatioAction=0
Bittorrent\PeX=false
Bittorrent\uTP=false
Bittorrent\uTP_rate_limited=true
Connection\GlobalDLLimitAlt=0
Connection\GlobalUPLimitAlt=0
#Connection\InetAddress=1.1.1.1
#Connection\Interface=eth0
#Connection\InterfaceAddress=0.0.0.0
#Connection\InterfaceName=eth0
Connection\ResolvePeerCountries=true
Connection\PortRangeMin=$iPort
Downloads\DiskWriteCacheSize=64
Downloads\DiskWriteCacheTTL=60
Downloads\SavePath=$iHome/qbittorrent/download
Downloads\SaveResumeDataInterval=3
Downloads\ScanDirsV2=@Variant(\0\0\0\x1c\0\0\0\0)
Downloads\StartInPause=false
Downloads\TorrentExportDir=$iHome/qbittorrent/torrent
General\Locale=$qbt_language
Queueing\QueueingEnabled=false
#Disable CSRF Protection For PT Plugin Plus
WebUI\AlternativeUIEnabled=false
WebUI\CSRFProtection=false
WebUI\HostHeaderValidation=true
WebUI\LocalHostAuth=false
WebUI\Port=$wPort
WebUI\RootFolder=$iHome/.config/qBittorrent/WebUI/miniers.qb-web

EOF

    if version_ge $qb_installed_ver 4.2.0 ; then
        if [[ -z $(command -v qbpass) ]]; then
            if [[ "$CODENAME" == xxxxxx ]]; then # comment out
                apt_install_check libssl-dev
                apt_install_separate
                git clone --depth=1 https://github.com/KozakaiAya/libqbpasswd.git libqbpasswd >> $OutputLOG 2>&1
                cd libqbpasswd >> $OutputLOG 2>&1
                make >> $OutputLOG 2>&1
                cp -f qb_password_gen /usr/local/bin/qbpass >> $OutputLOG 2>&1
                cd .. && rm -rf libqbpasswd >> $OutputLOG 2>&1
            else
                wget --no-check-certificate -nv https://sourceforge.net/projects/inexistence/files/qbittorrent/qb_password_gen_static/download -O /usr/local/bin/qbpass >> $OutputLOG 2>&1
                chmod +x /usr/local/bin/qbpass >> $OutputLOG 2>&1
            fi
        fi
        [[ ! -x /usr/local/bin/qbpass ]] && echo_error "Failed to get qb_password_gen" && exit 1
        qbPass=$(/usr/local/bin/qbpass $iPass)
        cat << EOF >> $qbconf
WebUI\Username=$iUser
WebUI\Password_PBKDF2="@ByteArray($qbPass)"
EOF
    else
        qbPass=$(echo -n $iPass | md5sum | cut -f1 -d ' ')
        cat << EOF >> $qbconf
WebUI\Username=$iUser
WebUI\Password_ha1=@ByteArray($qbPass)
EOF
    fi

    chmod -R 755             $iHome/qbittorrent   $iHome/.config/qBittorrent >> $OutputLOG 2>&1
    chown -R $iUser.$iUser   $iHome/qbittorrent   $iHome/.config/qBittorrent >> $OutputLOG 2>&1

    systemctl enable qbittorrent@$iUser >> $OutputLOG 2>&1
    systemctl start  qbittorrent@$iUser >> $OutputLOG 2>&1
    [[ -d /var/www/h5ai/$iUser ]] && ln -s   $iHome/qbittorrent/download   /var/www/h5ai/$iUser/qbittorrent >> $OutputLOG 2>&1
    sleep 2

    if version_ge $qb_installed_ver 4.2.0 ; then
        curl -i --data 'json={"scan_dirs":{"'"${iHome}/qbittorrent/watch"'":1}}'   http://localhost:${wPort}/api/v2/app/setPreferences >> $OutputLOG 2>&1
    else
        curl -i --data 'json={"scan_dirs":{"'"${iHome}/qbittorrent/watch"'":1}}'   http://localhost:${wPort}/command/setPreferences    >> $OutputLOG 2>&1
    fi

    sed -i "s|WebUI\\\LocalHostAuth.*|WebUI\\\LocalHostAuth=true|" $qbconf >> $OutputLOG 2>&1
    grep ScanDirsV2 $qbconf -q || echo_error "Failed to set monitored folder"
    echo  $wPort >  $PortLocation/$iUser.$AppNameLower
    systemctl restart qbittorrent@$iUser >> $OutputLOG 2>&1

    status_lock=$AppName-c
    echo "status_lock=$status_lock" > /tmp/Variables
    rm -f /tmp/$status_lock.1.lock /tmp/$status_lock.2.lock 
    ps --user $iUser | grep qbittorrent-nox -q && touch /tmp/$status_lock.1.lock || touch /tmp/$status_lock.2.lock
    echo >> $OutputLOG
}




echo_task "Configuring $AppName ..."
configure_qbittorrent & spinner $!
check_status $status_lock
